{"version":3,"sources":["constants/style.js","components/Header/style.js","components/Button.js","constants/varaible.js","utils.js","WebAPI.js","redux/reducers/userReducer.js","components/Header/Header.js","components/Page.js","redux/reducers/postReducer.js","components/Article.js","components/Loader.js","page/HomePage.js","page/ListPage.js","page/ArticlePage.js","constants/text.js","page/AboutPage.js","components/Input.js","components/Form.js","components/ErrorMessage.js","page/PostPage.js","page/EditPage.js","page/LoginPage.js","page/RegisterPage.js","components/Blog/Blog.js","redux/store.js","serviceWorker.js","index.js"],"names":["COLOR","MEDIA","DISTENCE","FONT","EFFECT","shadowDark","shadowLight","block","HeaderWrapper","styled","div","Wrapper","Container","Brand","Link","ButtonUnderlineHover","button","ButtonLink","isActive","content","className","Button","Nav","to","isExact","label","match","useRouteMatch","path","exact","Pagination","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","userReducer","createSlice","name","initialState","isLoadingUser","user","reducers","setIsLoadingUser","state","action","payload","setUser","actions","getUser","setIsRequest","dispatch","fetch","headers","authorization","then","response","json","getUserAPI","data","ok","login","username","password","method","body","JSON","stringify","loginAPI","register","nickname","registerAPI","selectIsLoadingUser","store","selectIsLogin","Header","useDispatch","location","useLocation","history","useHistory","isLogin","useSelector","onClick","pathname","push","Page","PageCenter","postReducer","isLoadingPost","post","pages","setIsLoadingPost","setPost","setPages","getPost","id","getPostAPI","console","log","getPosts","Math","ceil","length","title","postAPI","updatePost","updateAPI","deletePost","deleteAPI","selectIsLoadingPost","posts","selectPosts","selectPost","selectPages","ArticleContainer","prop","$center","ArticleHoverContainer","ArticleBar","ArticleFunction","$id","ArticleContent","paragraph","isShow","Date","createdAt","toLocaleString","Article","hover","as","LoaderContainer","Loader","Loading","HomePage","isLoading","useEffect","map","ListPage","page","useParams","slice","Array","fill","item","index","ArticlePage","ABOUT","parse","AboutPage","InputArea","alert","Input","type","value","handleOnChange","htmlFor","onChange","target","FormCard","form","FormPage","ErrorMessage","p","PostPage","useState","setTitle","setBody","errorMessage","setErrorMessage","onSubmit","event","message","preventDefault","EditPage","LoginPage","setUsername","setPassword","RegisterPage","setNickname","Blog","configureStore","reducer","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08152a66.chunk.js","sourcesContent":["export const COLOR = {\n  primary: \"#47717d\",\n  primaryDark: \"#3b5e68\",\n  primaryLight: \"#9ddbe6\",\n  alert: \"#F44335\",\n  black: \"#333333\",\n  white: \"#f5f5f5\",\n};\nexport const MEDIA = {\n  sm: \"@media (max-width: 381px)\",\n};\n\nexport const DISTENCE = {\n  xl: \"80px\",\n  lg: \"60px\",\n  md: \"30px\",\n  sm: \"20px\",\n  xs: \"10px\",\n};\n\nexport const FONT = {\n  lg: \"24px\",\n  md: \"20px\",\n  sm: \"16px\",\n  xs: \"12px\",\n};\n\nexport const EFFECT = {\n  shadowDark: `0px 1px 4px ${COLOR.primaryDark}30`,\n  shadowLight: `0px 1px 4px ${COLOR.primaryLight}80`,\n  block: `\n    display: block;\n    color: ${COLOR.primaryDark};\n    width: 100%;\n    padding: 10px;\n    border: 3px solid ${COLOR.primaryDark};\n    background: transparent;\n    box-shadow: 0px 1px 4px ${COLOR.primaryDark}30;\n  `,\n};\n","import { COLOR, MEDIA, EFFECT, DISTENCE, FONT } from \"../../constants/style\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const HeaderWrapper = styled.div`\n  width: 100%;\n  background: ${COLOR.white};\n  box-shadow: ${EFFECT.shadowDark};\n  position: fixed;\n  z-index: 2;\n  top: 0;\n`;\n\nexport const Wrapper = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  color: ${COLOR.primaryDark};\n  height: ${DISTENCE.lg};\n  ${MEDIA.sm} {\n    height: ${DISTENCE.xl};\n    flex-direction: column;\n  }\n`;\n\nexport const Brand = styled(Link)`\n  color: ${COLOR.primary};\n  font-size: ${FONT.lg};\n  font-weight: bold;\n  text-decoration: none;\n  padding: 0 ${DISTENCE.xs};\n`;\n","import styled from \"styled-components\";\nimport { COLOR, EFFECT, FONT } from \"../constants/style\";\nimport PropTypes from \"prop-types\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nconst ButtonUnderlineHover = styled.button`\n  background: none;\n  border: none;\n  display: inline-block;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${COLOR.primary};\n  font-size: inherit;\n  font-weight: bold;\n  padding: 5px 10px;\n  & span {\n    z-index: 1;\n    position: relative;\n  }\n  & span::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background: ${COLOR.primaryLight};\n    transition: width 0.3s ease-in-out;\n    position: absolute;\n    height: 50%;\n    width: 0;\n    left: 10%;\n    bottom: -10%;\n  }\n  &:hover span::before,\n  &.active span::before,\n  &:focus span::before {\n    width: 100%;\n  }\n`;\n\nexport function ButtonLink({ isActive, content }) {\n  return (\n    <ButtonUnderlineHover className={isActive ? \"active\" : \"\"}>\n      <span>{content}</span>\n    </ButtonUnderlineHover>\n  );\n}\n\nButtonLink.propTypes = {\n  isActive: PropTypes.bool,\n  content: PropTypes.string,\n};\n\nexport const Button = styled.button`\n  z-index: 1;\n  ${EFFECT.block}\n  font-size: ${FONT.md};\n  font-weight: bold;\n  position: relative;\n  box-shadow: ${EFFECT.shadowDark};\n  &:hover {\n    color: ${COLOR.white};\n    font-weight: normal;\n  }\n  &::before {\n    z-index: -1;\n    content: \"\";\n    display: block;\n    background: ${COLOR.primaryDark};\n    transition: width 0.3s ease-in-out;\n    position: absolute;\n    height: 100%;\n    width: 0;\n    left: 0;\n    top: 0;\n  }\n  &:hover::before {\n    width: 100%;\n  }\n  &:active {\n    box-shadow: none;\n  }\n`;\n\nexport function Nav({ to, isExact, label }) {\n  const match = useRouteMatch({\n    path: to,\n    exact: isExact,\n  });\n  return (\n    <Link to={to}>\n      <ButtonLink isActive={match ? true : false} content={label} />\n    </Link>\n  );\n}\n\nNav.propTypes = {\n  to: PropTypes.string,\n  isExact: PropTypes.bool,\n  label: PropTypes.string,\n};\n\nexport const Pagination = styled.div`\n  text-align: center;\n`;\n","export const LIST_LIMIT = 10;\nexport const TOKEN_NAME = \"token\";\n","import { TOKEN_NAME } from \"./constants/varaible\";\n\nexport const setAuthToken = (token) => localStorage.setItem(TOKEN_NAME, token);\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n","import { getAuthToken } from \"./utils\";\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = () => {\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc`\n  ).then((response) => response.json());\n};\n\nexport const getPostsPage = (page) => {\n  return fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}`\n  ).then((response) => response.json());\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((response) =>\n    response.json()\n  );\n};\n\nexport const getUser = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((response) => response.json());\n};\n\nexport const post = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ title, body }),\n  }).then((response) => response.json());\n};\n\nexport const updatePost = (id, title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({ title, body }),\n  }).then((response) => response.json());\n};\n\nexport const deletePost = (id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n  }).then((response) => response.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({ username, password }),\n  }).then((response) => response.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({ nickname, username, password }),\n  }).then((response) => response.json());\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { setAuthToken } from \"../../utils\";\nimport {\n  getUser as getUserAPI,\n  login as loginAPI,\n  register as registerAPI,\n} from \"../../WebAPI\";\n\nexport const userReducer = createSlice({\n  name: \"user\",\n  initialState: {\n    isLoadingUser: false,\n    user: null,\n  },\n  reducers: {\n    setIsLoadingUser: (state, action) => {\n      state.isLoadingUser = action.payload;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n});\n\nexport const { setIsLoadingUser, setUser, setIsRequest } = userReducer.actions;\n\nexport const getUser = () => (dispatch) =>\n  getUserAPI().then((data) => {\n    if (data.ok) dispatch(setUser(data.data));\n    return data;\n  });\nexport const login = (username, password) => (dispatch) => {\n  dispatch(setIsLoadingUser(true));\n  return loginAPI(username, password).then((data) => {\n    if (!data.ok) return data;\n    setAuthToken(data.token);\n    return dispatch(getUser());\n  });\n};\nexport const register = (nickname, username, password) => (dispatch) => {\n  dispatch(setIsLoadingUser(true));\n  return registerAPI(nickname, username, password).then((data) => {\n    if (!data.ok) return data;\n    setAuthToken(data.token);\n    return dispatch(getUser());\n  });\n};\n\nexport const selectIsLoadingUser = (store) => store.user.isLoadingUser;\nexport const selectUser = (store) => store.user.user;\nexport const selectIsLogin = (store) => (store.user.user ? true : false);\n\nexport default userReducer.reducer;\n","import { useLocation, useHistory } from \"react-router-dom\";\nimport { HeaderWrapper, Wrapper, Container, Brand } from \"./style\";\nimport { Nav, ButtonLink } from \"../Button\";\nimport { setAuthToken } from \"../../utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUser } from \"../../redux/reducers/userReducer\";\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const isLogin = useSelector((store) => (store.user.user ? true : null));\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    dispatch(setUser(null));\n    if (location.pathname === \"/post\") {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <HeaderWrapper>\n      <Wrapper>\n        <Container>\n          <Brand to=\"/\">\n            <ButtonLink isActive={true} content=\"ZoeHYH\" />\n          </Brand>\n          <div>\n            <Nav to=\"/list\" isExact={false} label=\"文章列表\" />\n            <Nav to=\"/about\" isExact={false} label=\"關於\" />\n            {isLogin ? (\n              <>\n                <Nav to=\"/post\" isExact={true} label=\"發布文章\" />\n                <span onClick={handleLogout}>\n                  <ButtonLink isActive={false} content=\"登出\" />\n                </span>\n              </>\n            ) : (\n              <>\n                <Nav to=\"/login\" isExact={true} label=\"登入\" />\n                <Nav to=\"/register\" isExact={true} label=\"註冊\" />\n              </>\n            )}\n          </div>\n        </Container>\n      </Wrapper>\n    </HeaderWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { COLOR, DISTENCE, MEDIA } from \"../constants/style\";\n\nexport const Page = styled.div`\n  color: ${COLOR.primaryDark};\n  margin-top: ${DISTENCE.lg};\n  padding: ${DISTENCE.xs} ${DISTENCE.xs};\n  ${MEDIA.sm} {\n    margin-top: ${DISTENCE.xl};\n  }\n`;\n\nexport const PageCenter = styled.div`\n  color: ${COLOR.primaryDark};\n  margin-top: ${DISTENCE.lg};\n  padding: 15vh ${DISTENCE.xs};\n  display: flex;\n  justify-content: center;\n  position: relative;\n  ${MEDIA.sm} {\n    margin-top: ${DISTENCE.xl};\n  }\n`;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  getPost as getPostAPI,\n  getPosts as getPostsAPI,\n  post as postAPI,\n  updatePost as updateAPI,\n  deletePost as deleteAPI,\n} from \"../../WebAPI\";\nimport { LIST_LIMIT } from \"../../constants/varaible\";\n\nexport const postReducer = createSlice({\n  name: \"posts\",\n  initialState: {\n    isLoadingPost: false,\n    post: null,\n    pages: 1,\n  },\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n    setPages: (state, action) => {\n      state.pages = action.payload;\n    },\n  },\n});\n\nexport const { setIsLoadingPost, setPost, setPages } = postReducer.actions;\n\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  return getPostAPI(id).then((data) => {\n    console.log(data);\n    dispatch(setPost(data));\n    dispatch(setIsLoadingPost(false));\n  });\n};\n\nexport const getPosts = () => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getPostsAPI().then((data) => {\n    dispatch(setPages(Math.ceil(data.length / LIST_LIMIT)));\n    dispatch(setPost(data));\n    dispatch(setIsLoadingPost(false));\n  });\n};\n\nexport const post = (title, body) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  return postAPI(title, body);\n};\n\nexport const updatePost = (id, title, body) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  return updateAPI(id, title, body);\n};\n\nexport const deletePost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  return deleteAPI(id);\n};\n\nexport const selectIsLoadingPost = (state) => state.posts.isLoadingPost;\nexport const selectPosts = (state) => state.posts.post;\nexport const selectPost = (state) => state.posts.post;\nexport const selectPages = (state) => state.posts.pages;\n\nexport default postReducer.reducer;\n","import styled from \"styled-components\";\nimport { COLOR, DISTENCE, EFFECT, FONT } from \"../constants/style\";\nimport PropTypes from \"prop-types\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { ButtonLink, Nav } from \"./Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deletePost, setIsLoadingPost } from \"../redux/reducers/postReducer\";\nimport { selectIsLogin } from \"../redux/reducers/userReducer\";\n\nconst ArticleContainer = styled.div`\n  color: ${COLOR.primary};\n  padding: ${DISTENCE.xs};\n  max-width: 600px;\n  margin: 0 auto;\n  & + & {\n    border-top: 1px solid ${COLOR.primaryDark + \"30\"};\n  }\n  & h3 {\n    color: ${COLOR.primaryDark};\n    font-size: ${FONT.md};\n    font-weight: bold;\n    margin: 5px 0;\n    ${(prop) => (prop.$center ? \"text-align: center;\" : \"\")}\n  }\n  & p {\n    font-size: ${FONT.sm};\n    margin: 5px 0;\n    letter-spacing: 2px;\n    white-space: pre-line;\n    word-break: break-all;\n  }\n`;\n\nconst ArticleHoverContainer = styled(ArticleContainer)`\n  display: block;\n  text-decoration: none;\n  &:hover {\n    box-shadow: ${EFFECT.shadowDark};\n  }\n`;\n\nconst ArticleBar = styled.div`\n  font-size: ${FONT.xs};\n  background: ${COLOR.primary + \"20\"};\n  padding: 0 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  & span {\n    margin: 5px 0;\n  }\n`;\n\nfunction ArticleFunction({ $id }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isLogin = useSelector(selectIsLogin);\n  const handleDelete = () => {\n    if (!isLogin) return;\n    dispatch(deletePost($id)).then((data) => {\n      dispatch(setIsLoadingPost(false));\n      if (data.ok === 0) return;\n      history.push(\"/\");\n    });\n  };\n  return (\n    <div>\n      <Nav to={`/edit-${$id}`} isExact={true} label={\"編輯\"} />\n      <span onClick={handleDelete}>\n        <ButtonLink isActive={false} content={\"刪除\"} />\n      </span>\n    </div>\n  );\n}\n\nfunction ArticleContent({ post, paragraph }) {\n  const location = useLocation();\n  const isLogin = useSelector(selectIsLogin);\n  const isShow = location.pathname !== \"/about\" && isLogin;\n  return (\n    <>\n      <h3>{post.title}</h3>\n      <ArticleBar>\n        <span>{new Date(post.createdAt).toLocaleString()}</span>\n        {isShow && <ArticleFunction $id={post.id} />}\n      </ArticleBar>\n      {paragraph && <p>{post.body}</p>}\n    </>\n  );\n}\n\nexport function Article({ post, hover, $center, paragraph }) {\n  if (hover)\n    return (\n      <ArticleHoverContainer\n        as={Link}\n        to={`/article-${post.id}`}\n        $center={$center}\n      >\n        <ArticleContent post={post} paragraph={paragraph} />\n      </ArticleHoverContainer>\n    );\n  return (\n    <ArticleContainer $center={$center}>\n      <ArticleContent post={post} paragraph={paragraph} />\n    </ArticleContainer>\n  );\n}\n\nArticle.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    createdAt: PropTypes.number,\n    id: PropTypes.number,\n  }),\n  hover: PropTypes.bool,\n  $center: PropTypes.bool,\n  paragraph: PropTypes.bool,\n};\nArticleContent.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    createdAt: PropTypes.number,\n    id: PropTypes.number,\n  }),\n  paragraph: PropTypes.bool,\n};\nArticleFunction.propTypes = {\n  $id: PropTypes.number,\n};\n","import styled from \"styled-components\";\nimport { COLOR } from \"../constants/style\";\n\nconst LoaderContainer = styled.div`\n  z-index: 3;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: ${COLOR.primaryDark + \"80\"};\n`;\n\nconst Loader = styled.div`\n  @keyframes rect-rotate {\n    0% {\n      transform: rotate(0);\n    }\n    50%,\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes fill-rect {\n    0%,\n    50% {\n      width: 0px;\n    }\n    100% {\n      width: 100%;\n    }\n  }\n  transform-origin: center center;\n  color: ${COLOR.primary};\n  width: 70px;\n  height: 70px;\n  position: relative;\n  border: 3px solid;\n  display: inline-block;\n  animation: rect-rotate 2s linear infinite;\n\n  &::after {\n    content: \"\";\n    height: 100%;\n    display: block;\n    background: ${COLOR.primaryLight};\n    animation: fill-rect 2s linear infinite;\n  }\n`;\n\nexport function Loading() {\n  return (\n    <LoaderContainer>\n      <Loader />\n    </LoaderContainer>\n  );\n}\n","import { useEffect } from \"react\";\nimport { Page } from \"../components/Page\";\nimport { Article } from \"../components/Article\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Loading } from \"../components/Loader\";\nimport {\n  getPosts,\n  selectIsLoadingPost,\n  selectPosts,\n} from \"../redux/reducers/postReducer\";\n\nexport default function HomePage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingPost);\n  const posts = useSelector(selectPosts);\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n  return (\n    <Page>\n      {isLoading && <Loading />}\n      {posts &&\n        posts.map((post) => (\n          <Article\n            key={post.id}\n            post={post}\n            hover={true}\n            $center={false}\n            paragraph={false}\n          ></Article>\n        ))}\n    </Page>\n  );\n}\n","import { useEffect } from \"react\";\nimport { Article } from \"../components/Article\";\nimport { Page } from \"../components/Page\";\nimport { useParams } from \"react-router-dom\";\nimport { Nav, Pagination } from \"../components/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Loading } from \"../components/Loader\";\nimport { LIST_LIMIT } from \"../constants/varaible\";\nimport {\n  getPosts,\n  selectIsLoadingPost,\n  selectPages,\n  selectPosts,\n} from \"../redux/reducers/postReducer\";\n\nexport default function ListPage() {\n  let { page } = useParams();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingPost);\n  const posts = useSelector(selectPosts);\n  const pages = useSelector(selectPages);\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n  return (\n    <Page>\n      {isLoading && <Loading />}\n      {posts &&\n        posts\n          .slice((page - 1) * LIST_LIMIT, page * LIST_LIMIT)\n          .map((post) => (\n            <Article\n              key={post.id}\n              post={post}\n              hover={true}\n              $center={false}\n              paragraph={true}\n            />\n          ))}\n      <Pagination>\n        {posts &&\n          pages &&\n          new Array(pages).fill(\"\").map((item, index) => {\n            return (\n              <Nav\n                key={index}\n                to={`/list/${index + 1}`}\n                isExact={false}\n                label={`${index + 1}`}\n              />\n            );\n          })}\n      </Pagination>\n    </Page>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport { Article } from \"../components/Article\";\nimport { Page } from \"../components/Page\";\nimport {\n  getPost,\n  selectIsLoadingPost,\n  selectPost,\n} from \"../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Loading } from \"../components/Loader\";\nimport { useEffect } from \"react\";\n\nexport default function ArticlePage() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingPost);\n  const post = useSelector(selectPost);\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id, dispatch]);\n  return (\n    <Page>\n      {isLoading && <Loading />}\n      {post && (\n        <Article post={post[0]} hover={false} $center={true} paragraph={true} />\n      )}\n    </Page>\n  );\n}\n","export const ABOUT = {\n  id: 0,\n  title: \"關於這個部落格\",\n  createdAt: Date.parse(\"2020-11-27T16:30:00\"),\n  body: `\n    這個部落格 SPA 使用 React 製作，並使用 Redux 這套架構管理資料，前端路由則是用 React Router DOM 這套 Library 實作。註冊後，密碼都會是 \"Lidemy\"。\n  `,\n};\n","import { Article } from \"../components/Article\";\nimport { Page } from \"../components/Page\";\nimport { ABOUT } from \"../constants/text\";\n\nexport default function AboutPage() {\n  return (\n    <Page>\n      <Article post={ABOUT} hover={false} $center={true} paragraph={true} />\n    </Page>\n  );\n}\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { COLOR, DISTENCE, EFFECT, FONT } from \"../constants/style\";\n\nconst InputArea = styled.div`\n  display: block;\n  width: 100%;\n  &:last-of-type {\n    margin-bottom: 30px;\n  }\n  & label {\n    display: block;\n    color: ${COLOR.primary};\n    font-size: ${FONT.sm};\n    font-weight: bold;\n    margin: ${DISTENCE.xs};\n    ${({ alert }) => (alert ? `color: ${COLOR.alert}` : \"\")}\n  }\n  & input,\n  & textarea {\n    ${EFFECT.block}\n    font-size: ${FONT.md};\n    font-family: initial;\n    ${({ alert }) => (alert ? `border: 3px solid ${COLOR.alert}` : \"\")}\n  }\n  & textarea {\n    height: 50vh;\n  }\n`;\n\nexport function Input({ content, type, name, alert, value, handleOnChange }) {\n  return (\n    <InputArea alert={alert}>\n      <label htmlFor={name}>{content}</label>\n      {type === \"textarea\" ? (\n        <textarea\n          id={name}\n          value={value}\n          onChange={({ target }) => handleOnChange(target.value)}\n        />\n      ) : (\n        <input\n          type={type}\n          id={name}\n          value={value}\n          onChange={({ target }) => handleOnChange(target.value)}\n        />\n      )}\n    </InputArea>\n  );\n}\n\nInput.propTypes = {\n  content: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  alert: PropTypes.bool,\n  handleOnChange: PropTypes.func,\n};\n","import styled from \"styled-components\";\n\nexport const FormCard = styled.form`\n  width: 320px;\n  position: relative;\n`;\n\nexport const FormPage = styled.form`\n  max-width: 600px;\n  margin: 0 auto;\n  position: relative;\n`;\n","import styled from \"styled-components\";\nimport { COLOR, DISTENCE } from \"../constants/style\";\n\nexport const ErrorMessage = styled.p`\n  color: ${COLOR.alert};\n  margin: 0;\n  text-align: center;\n  display: block;\n  position: absolute;\n  bottom: ${DISTENCE.md};\n  right: 0;\n  left: 0;\n`;\n","import { Input } from \"../components/Input\";\nimport { Page } from \"../components/Page\";\nimport { FormPage } from \"../components/Form\";\nimport { useState } from \"react\";\nimport { Button } from \"../components/Button\";\nimport { ErrorMessage } from \"../components/ErrorMessage\";\nimport { post, setIsLoadingPost } from \"../redux/reducers/postReducer\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsLogin } from \"../redux/reducers/userReducer\";\n\nexport default function PostPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const isLogin = useSelector(selectIsLogin);\n  const handleOnSubmit = (event) => {\n    if (!isLogin) return history.push(\"/\");\n    dispatch(post(title, body)).then((data) => {\n      dispatch(setIsLoadingPost(false));\n      if (data.ok === 0) return setErrorMessage(data.message);\n      history.push(`/article-${data.id}`);\n    });\n    event.preventDefault();\n  };\n  return (\n    <Page>\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n      <FormPage onSubmit={handleOnSubmit}>\n        <Input\n          content=\"標題\"\n          type=\"text\"\n          name=\"title\"\n          alert={errorMessage ? true : false}\n          value={title}\n          handleOnChange={(value) => setTitle(value)}\n        />\n        <Input\n          content=\"內文\"\n          type=\"textarea\"\n          name=\"body\"\n          alert={errorMessage ? true : false}\n          value={body}\n          handleOnChange={(value) => setBody(value)}\n        />\n        <Button>發布</Button>\n      </FormPage>\n    </Page>\n  );\n}\n","import { Input } from \"../components/Input\";\nimport { Page } from \"../components/Page\";\nimport { FormPage } from \"../components/Form\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"../components/Button\";\nimport { ErrorMessage } from \"../components/ErrorMessage\";\nimport {\n  getPost,\n  selectIsLoadingPost,\n  selectPost,\n  setIsLoadingPost,\n  updatePost,\n} from \"../redux/reducers/postReducer\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsLogin } from \"../redux/reducers/userReducer\";\nimport { Loading } from \"../components/Loader\";\n\nexport default function EditPage() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const post = useSelector(selectPost);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const isLogin = useSelector(selectIsLogin);\n  const isLoading = useSelector(selectIsLoadingPost);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id, dispatch]);\n  useEffect(() => {\n    console.log(post);\n    setTitle(post[0].title);\n    setBody(post[0].body);\n  }, [post]);\n  const handleOnSubmit = (event) => {\n    if (!isLogin) return history.push(\"/\");\n    dispatch(updatePost(id, title, body)).then((data) => {\n      dispatch(setIsLoadingPost(false));\n      if (data.ok === 0) return setErrorMessage(data.message);\n      history.push(`/article-${data.id}`);\n    });\n    event.preventDefault();\n  };\n  return (\n    <Page>\n      {isLoading && <Loading />}\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n      {post && (\n        <FormPage onSubmit={handleOnSubmit}>\n          <Input\n            content=\"標題\"\n            type=\"text\"\n            name=\"title\"\n            alert={errorMessage ? true : false}\n            value={title}\n            handleOnChange={(value) => setTitle(value)}\n          />\n          <Input\n            content=\"內文\"\n            type=\"textarea\"\n            name=\"body\"\n            alert={errorMessage ? true : false}\n            value={body}\n            handleOnChange={(value) => setBody(value)}\n          />\n          <Button>修改</Button>\n        </FormPage>\n      )}\n    </Page>\n  );\n}\n","import { FormCard } from \"../components/Form\";\nimport { ErrorMessage } from \"../components/ErrorMessage\";\nimport { Button } from \"../components/Button\";\nimport { Input } from \"../components/Input\";\nimport { PageCenter } from \"../components/Page\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport {\n  login,\n  selectIsLoadingUser,\n  setIsLoadingUser,\n} from \"../redux/reducers/userReducer\";\nimport { getAuthToken, setAuthToken } from \"../utils\";\nimport { Loading } from \"../components/Loader\";\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingUser);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const handleOnSubmit = (event) => {\n    dispatch(login(username, password)).then((data) => {\n      dispatch(setIsLoadingUser(false));\n      if (data.ok === 1) return history.push(\"/\");\n      if (getAuthToken()) setAuthToken(null);\n      setErrorMessage(data.message);\n    });\n    event.preventDefault();\n  };\n  return (\n    <PageCenter>\n      {isLoading && <Loading />}\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n      <FormCard onSubmit={handleOnSubmit}>\n        <Input\n          content=\"帳號\"\n          type=\"text\"\n          name=\"username\"\n          alert={errorMessage ? true : false}\n          value={username}\n          handleOnChange={(value) => setUsername(value)}\n        ></Input>\n        <Input\n          content=\"密碼\"\n          type=\"password\"\n          name=\"password\"\n          alert={errorMessage ? true : false}\n          value={password}\n          handleOnChange={(value) => setPassword(value)}\n        ></Input>\n        <Button>登入</Button>\n      </FormCard>\n    </PageCenter>\n  );\n}\n","import { useState } from \"react\";\nimport { FormCard } from \"../components/Form\";\nimport { ErrorMessage } from \"../components/ErrorMessage\";\nimport { Button } from \"../components/Button\";\nimport { Input } from \"../components/Input\";\nimport { PageCenter } from \"../components/Page\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  register,\n  selectIsLoadingUser,\n  setIsLoadingUser,\n} from \"../redux/reducers/userReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAuthToken, setAuthToken } from \"../utils\";\nimport { Loading } from \"../components/Loader\";\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoadingUser);\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const handleOnSubmit = (event) => {\n    dispatch(register(nickname, username, password)).then((data) => {\n      dispatch(setIsLoadingUser(false));\n      if (data.ok === 1) return history.push(\"/\");\n      if (getAuthToken()) setAuthToken(null);\n      setErrorMessage(data.message);\n    });\n    event.preventDefault();\n  };\n  return (\n    <PageCenter>\n      {isLoading && <Loading />}\n      <ErrorMessage>{errorMessage}</ErrorMessage>\n      <FormCard onSubmit={handleOnSubmit}>\n        <Input\n          content=\"暱稱\"\n          type=\"text\"\n          name=\"nickname\"\n          alert={errorMessage ? true : false}\n          value={nickname}\n          handleOnChange={(value) => setNickname(value)}\n        ></Input>\n        <Input\n          content=\"帳號\"\n          type=\"text\"\n          name=\"username\"\n          alert={errorMessage ? true : false}\n          value={username}\n          handleOnChange={(value) => setUsername(value)}\n        ></Input>\n        <Input\n          content=\"密碼\"\n          type=\"password\"\n          name=\"password\"\n          alert={errorMessage ? true : false}\n          value={password}\n          handleOnChange={(value) => setPassword(value)}\n        ></Input>\n        <Button>{\"註冊\"}</Button>\n      </FormCard>\n    </PageCenter>\n  );\n}\n","import Header from \"../Header\";\nimport HomePage from \"../../page/HomePage\";\nimport ListPage from \"../../page/ListPage\";\nimport ArticlePage from \"../../page/ArticlePage\";\nimport AboutPage from \"../../page/AboutPage\";\nimport PostPage from \"../../page/PostPage\";\nimport Editpost from \"../../page/EditPage\";\nimport LoginPage from \"../../page/LoginPage\";\nimport RegisterPage from \"../../page/RegisterPage\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { getUser, selectIsLogin } from \"../../redux/reducers/userReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAuthToken } from \"../../utils\";\n\nexport default function Blog() {\n  const dispatch = useDispatch();\n  const isLogin = useSelector(selectIsLogin);\n  useEffect(() => {\n    if (getAuthToken()) dispatch(getUser());\n  }, [dispatch]);\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/list\">\n          <Redirect to=\"/list/1\" />\n        </Route>\n        <Route exact path=\"/list/:page\">\n          <ListPage />\n        </Route>\n        <Route exact path=\"/article-:id\">\n          <ArticlePage />\n        </Route>\n        <Route exact path=\"/about\">\n          <AboutPage />\n        </Route>\n        {isLogin && (\n          <>\n            <Route exact path=\"/post\">\n              <PostPage />\n            </Route>\n            <Route exact path=\"/edit-:id\">\n              <Editpost />\n            </Route>\n          </>\n        )}\n        {!isLogin && (\n          <>\n            <Route exact path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route exact path=\"/register\">\n              <RegisterPage />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"./reducers/postReducer\";\nimport userReducer from \"./reducers/userReducer\";\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Blog from \"./components/Blog\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Blog />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}